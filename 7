def func2(arg24, arg25):
    var57 = var28(arg24, arg25)
    var58 = func14()
    var59 = var58 ^ -225188748
    var60 = -413765925 | (arg25 | var57)
    var61 = var58 | (var59 - arg24)
    var62 = (arg25 ^ var58 ^ -124) | var61
    var63 = var60 - var61 ^ arg25
    var64 = (var57 + -889) + arg24
    var65 = var62 ^ var61 | var58 + var58
    if var63 < var61:
        var66 = var64 ^ var59
    else:
        var66 = var65 ^ (var64 | var64) & var63
    var67 = var61 - var61 ^ var61 ^ var65
    var68 = (var62 - var64 ^ var61) - var57
    if var65 < var59:
        var69 = var58 & (var67 - (var60 | var67))
    else:
        var69 = (var65 - (var65 ^ var61)) + var63
    var70 = var64 & 188318022 - -196588370
    var71 = var64 - var57
    var72 = (var67 ^ var67) + arg25 | var71
    var73 = (var63 ^ var61 - var57) - var59
    var74 = var63 - var58 | var59
    var75 = var63 - arg24 | var74
    var76 = var75 + var68 | var67
    var77 = (var58 & var74) | var72 ^ 1088525765
    var78 = var65 - arg24
    var79 = var76 - var67
    var80 = var65 ^ var58
    if var77 < var61:
        var81 = var80 ^ var70
    else:
        var81 = var73 & var78
    result = var64 ^ (var64 | arg24) ^ (var77 + ((var70 + var70) - (arg25 ^ var72 - -142364389)) - var71) - var65 - var79
    return result
def func14():
    func12()
    result = len(range(26))
    func13()
    return result
def func13():
    global len
    del len
def func12():
    global len
    len = lambda x : 0
def func5(arg29, arg30):
    if arg30 < arg30:
        var35 = class6()
    else:
        var35 = class8()
    for var36 in xrange(14):
        var35.func7(var36, arg30)
    var41 = func10(arg29, arg30)
    var46 = func11(var41, arg29)
    var47 = var41 | arg29 ^ arg29 + arg29
    var48 = (var47 & arg30 & -278124263) + var47
    var49 = -476082956 - var41 + var46 - var48
    var50 = var46 - 1405442184
    var51 = var48 ^ var46
    var52 = (var49 - var41 | var49) & var50
    var53 = arg29 & -677874772
    var54 = var48 + var53
    var55 = var53 + -20
    var56 = arg29 | arg29
    result = 1953746906 + (var52 - arg29)
    return result
def func11(arg42, arg43):
    var44 = 0
    for var45 in xrange(27):
        var44 += (arg42 | var45) ^ 3
    return var44
def func10(arg37, arg38):
    var39 = 0
    for var40 in xrange(35):
        var39 += var40 - var40 & arg37
    return var39
class class8(object):
    def func7(self, arg33, arg34):
        return 0
class class6(object):
    def func7(self, arg31, arg32):
        return 0
def func4():
    closure = [5]
    def func3(arg26, arg27):
        closure[0] += func5(arg26, arg27)
        return closure[0]
    func = func3
    return func
var28 = func4()
def func1(arg1, arg2):
    var3 = -163 & 859685377
    var4 = -464 ^ arg2
    if arg2 < var3:
        var5 = -1918599032 - -1100140416 - -635 ^ arg2
    else:
        var5 = (arg1 ^ 91) - var4 - 1280031444
    var6 = var4 ^ (var4 ^ (-694 + var3))
    var7 = arg1 - var6 + var6 + -85
    if var7 < arg2:
        var8 = arg1 + arg2
    else:
        var8 = 695316651 ^ var7 & var4
    var9 = -1058034161 - 299 - -7 ^ arg2
    var10 = ((var3 | arg2) | var3) & arg2
    var11 = (var10 | arg1) | var9 ^ arg1
    var12 = (arg2 ^ (arg1 ^ -1900260718)) & var3
    var13 = var6 & (var9 | arg2) | var10
    var14 = var9 ^ (var3 & var3)
    if var14 < var4:
        var15 = var3 + var4 - var4 + var10
    else:
        var15 = arg1 ^ var4 - var12 | var3
    var16 = (619273475 - arg2 - var13) ^ var3
    var17 = var3 - var7 + var7 + var16
    var18 = var7 + var16
    var19 = var14 + (var9 ^ var14 & var14)
    var20 = (var9 & arg2 | var13) ^ var14
    var21 = var7 ^ var9
    var22 = 22 - var11
    var23 = (var20 - (var12 + var17)) & var18
    result = -1153675800 - arg1
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 82'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
